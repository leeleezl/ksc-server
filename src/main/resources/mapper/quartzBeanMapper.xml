<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heu.ksc.dao.QuartzBeanMapper">


    <resultMap id="quartzBeanMap" type="com.heu.ksc.entity.QuartzBean">
        <result property="id" column="id"/>
        <result property="description" column="description"/>
        <result property="jobName" column="job_name"/>
        <result property="jobClass" column="job_class"/>
        <result property="cronExpression" column="cron_expression"/>
        <result property="status" column="status"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="createTime"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="selectAll" resultMap="quartzBeanMap">
        select id, description,job_name, job_class, cron_expression, status, create_user, create_time,update_user,update_time
        from quartz_bean
        where status > 0
        <if test="queryKey != null and queryKey != ''">
            and (description like CONCAT('%', #{queryKey}, '%')
                or job_name like CONCAT('%', #{queryKey}, '%'))
        </if>
    </select>

    <insert id="createJob" parameterType="com.heu.ksc.entity.QuartzBean">
        insert into quartz_bean (description,job_name, job_class, cron_expression, status,create_user, create_time,update_user,update_time)
        values (#{description}, #{jobName}, #{jobClass}, #{cronExpression}, #{status}, #{createUser}, #{createTime}, #{updateUser}, #{updateTime})
    </insert>

    <update id="updateJob" parameterType="com.heu.ksc.entity.QuartzBean">
        update quartz_bean set description = #{description}, job_name = #{jobName}, job_class = #{jobClass},
                               cron_expression = #{cronExpression}, status = #{status}, create_user = #{createUser},
                               create_time = #{createTime}, update_user = #{updateUser}, update_time = #{updateTime}
    </update>

</mapper>